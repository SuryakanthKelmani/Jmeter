<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="BP20_SPEV01" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="pTimer_Random" elementType="Argument">
            <stringProp name="Argument.name">pTimer_Random</stringProp>
            <stringProp name="Argument.value">500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pTimer_Min" elementType="Argument">
            <stringProp name="Argument.name">pTimer_Min</stringProp>
            <stringProp name="Argument.value">1000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pEnvURL_SPE" elementType="Argument">
            <stringProp name="Argument.name">pEnvURL_SPE</stringProp>
            <stringProp name="Argument.value">spe-strategic-promotion-engine-pt.int.stg.jspaas.uk</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="false">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="${__machineName()}_SPEV01" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">600</stringProp>
        <longProp name="ThreadGroup.start_time">1481116852000</longProp>
        <longProp name="ThreadGroup.end_time">1481116852000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">600</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShellPreProcessor_createBasket" enabled="false">
          <boolProp name="resetInterpreter">true</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import java.io.FileReader;
import org.apache.commons.lang3.StringUtils;
import java.util.Random;
import java.util.ArrayList;

int MaxBasketSize =5;

	FileReader fileReader=new FileReader(&quot;/opt/jmeter/apache-jmeter-5.4/bin/ArgosAWS_UK_PT/Data/pPartNumbers_PrePay.csv&quot;);
	BufferedReader bufferReader= new BufferedReader(fileReader);
	ArrayList fileReaderList = new ArrayList();

	String line;
    while ((line = bufferReader.readLine()) != null) {
        fileReaderList.add(line);
    }
    
	fileReader.close();
	bufferReader.close();

Random rand = new Random();
int randomBasketItems=rand.nextInt(MaxBasketSize)+1;

ArrayList ItemList = new ArrayList();

for(int i=0;i&lt;randomBasketItems;i++){

	int randomz = rand.nextInt(fileReaderList.size());
	//log.info(&quot;randomz-----------&gt;&quot;+randomz);
	String sku=fileReaderList.get(randomz);
	if (sku==null)
	{continue;
		}
//	log.info(&quot;SKU-----------&gt;&quot;+sku);
	int RandQty=rand.nextInt(4)+1;
	String lineItem=&quot;{\&quot;sku\&quot;:&quot;+sku+&quot;,\&quot;quantity\&quot;:&quot;+RandQty+&quot;}&quot;;
	ItemList.add(lineItem);
}

String randomBasket=&quot;&quot;;

if (ItemList.size() &gt; 0)
	{
	vars.put(&quot;emptyItems&quot;, &quot;false&quot;);
	
	randomBasket=&quot;{\&quot;customerId\&quot;: \&quot;CUSTOMER-1000\&quot;,\&quot;locationId\&quot;: \&quot;ZONE-0\&quot;,\&quot;channel\&quot;: \&quot;online\&quot;,\&quot;items\&quot;: &quot;+ItemList.toString()+&quot;}&quot;;
	log.info(randomBasket);
	} else
	{
	log.info(&quot;No items in the basket&quot;);
	vars.put(&quot;emptyItems&quot;, &quot;true&quot;);
		}
	

vars.put(&quot;randomBasket&quot;, randomBasket);
</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller_VerifyGetBasket" enabled="false">
          <stringProp name="IfController.condition">${emptyItems} == &quot;true&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <stringProp name="TestPlan.comments">${__javaScript(&quot;${emptyItems}&quot; == &quot;true&quot;)}</stringProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Exit current iteration &amp; go to next loop iteration" enabled="false">
            <intProp name="ActionProcessor.action">3</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration"></stringProp>
          </TestAction>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SPE_Evaluate" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${randomBasket}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${pEnvURL_SPE}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/evaluate</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.109 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShellPreProcessor_createBasket" enabled="true">
            <boolProp name="resetInterpreter">true</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import java.io.FileReader;
import org.apache.commons.lang3.StringUtils;
import java.util.Random;
import java.util.ArrayList;

int MaxBasketSize =5;
int MinBasketSize=1;
	FileReader fileReader=new FileReader(&quot;/opt/jmeter/apache-jmeter-5.4/bin/ArgosAWS_UK_PT/Data/pPartNumbers_PrePay.csv&quot;);
	BufferedReader bufferReader= new BufferedReader(fileReader);
	ArrayList fileReaderList = new ArrayList();

	String line;
    while ((line = bufferReader.readLine()) != null) {
        fileReaderList.add(line);
    }
    
	fileReader.close();
	bufferReader.close();

Random rand = new Random();

int randomBasketItems=rand.nextInt(MaxBasketSize - MinBasketSize + 1) + MinBasketSize;

ArrayList ItemList = new ArrayList();

for(int i=0;i&lt;randomBasketItems;i++){

	int randomz = rand.nextInt(fileReaderList.size());
	//log.info(&quot;randomz-----------&gt;&quot;+randomz);
	String sku=fileReaderList.get(randomz);
	if (sku==null)
	{continue;
		}
//	log.info(&quot;SKU-----------&gt;&quot;+sku);
	int RandQty=rand.nextInt(4)+1;
	String lineItem=&quot;{\&quot;sku\&quot;:&quot;+sku+&quot;,\&quot;quantity\&quot;:&quot;+RandQty+&quot;}&quot;;
	ItemList.add(lineItem);
}

String randomBasket=&quot;&quot;;

if (ItemList.size() &gt; 0)
	{
	randomBasket=&quot;{\&quot;customerId\&quot;: \&quot;CUSTOMER-1000\&quot;,\&quot;locationId\&quot;: \&quot;ZONE-0\&quot;,\&quot;channel\&quot;: \&quot;online\&quot;,\&quot;items\&quot;: &quot;+ItemList.toString()+&quot;}&quot;;
	log.info(randomBasket);
	} else
	{
	log.info(&quot;No items in the basket&quot;);
	
		}
	

vars.put(&quot;randomBasket&quot;, randomBasket);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${pTimer_Min}</stringProp>
            <stringProp name="RandomTimer.range">${pTimer_Random}</stringProp>
          </GaussianRandomTimer>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="TestPlan.comments">basket-argos-basket-ui-pt.ext.stg.jspaas.uk</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
